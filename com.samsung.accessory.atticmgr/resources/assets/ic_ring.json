{"v":"5.6.5","fr":60,"ip":0,"op":73,"w":135,"h":135,"nm":"JSON_Ring_Blue","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shape Layer 11","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":72,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":78,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":96,"s":[100],"e":[0]},{"t":108}]},"r":{"a":0,"k":0},"p":{"a":0,"k":[59,74.5,0]},"a":{"a":0,"k":[0,0,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"t":72,"s":[30,30],"e":[66,66]},{"t":108}],"x":"var $bm_rt;\nvar easingPreset = [[\n            1,\n            2,\n            [\n                'make_bezier_easing',\n                [\n                    0.17,\n                    0.17,\n                    0.67,\n                    1\n                ],\n                'Sine.Out33',\n                true\n            ]\n        ]];\nfunction sampleCurveY(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ay, t), this.by), t), this.cy), t);\n}\nfunction sampleCurveX(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ax, t), this.bx), t), this.cx), t);\n}\nfunction sampleCurveDerivativeX(t) {\n    return $bm_sum($bm_mul($bm_sum($bm_mul($bm_mul(3, this.ax), t), $bm_mul(2, this.bx)), t), this.cx);\n}\nfunction solveCurveX(x, epsilon) {\n    var t2, i, x2, d2, t0, t1;\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = $bm_sub(sampleCurveX.call(this, t2), x);\n        if (Math.abs(x2) < epsilon) {\n            return t2;\n        }\n        d2 = sampleCurveDerivativeX.call(this, t2);\n        if (Math.abs(d2) < 0.000001) {\n            break;\n        }\n        t2 = $bm_sub(t2, $bm_div(x2, d2));\n    }\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0) {\n        return t0;\n    }\n    if (t2 > t1) {\n        return t1;\n    }\n    while (t0 < t1) {\n        x2 = sampleCurveX.call(this, t2);\n        if (Math.abs(x2 - x) < epsilon) {\n            return t2;\n        }\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = $bm_sum($bm_mul($bm_sub(t1, t0), 0.5), t0);\n    }\n    return t2;\n}\nfunction executeBezier(t, b, e, d) {\n    return $bm_sum(b, $bm_mul(e, sampleCurveY.call(this, solveCurveX.call(this, $bm_div(t, d), $bm_div(1, $bm_mul(200, d))))));\n}\nfunction executeBezierProgress(oldProgress) {\n    return sampleCurveY.call(this, solveCurveX.call(this, oldProgress, 1 / 200));\n}\nfunction make_bezier_easing(p1x, p1y, p2x, p2y, curviosity) {\n    this.cx = $bm_mul(3, p1x);\n    this.bx = $bm_sub($bm_mul(3, $bm_sub(p2x, p1x)), this.cx);\n    this.ax = $bm_sub($bm_sub(1, this.cx), this.bx);\n    this.cy = $bm_mul(3, p1y);\n    this.by = $bm_sub($bm_mul(3, $bm_sub(p2y, p1y)), this.cy);\n    this.ay = $bm_sub($bm_sub(1, this.cy), this.by);\n    this.curviosity = curviosity;\n    this.execute = executeBezier;\n    this.executeProgress = executeBezierProgress;\n    return this;\n}\nfunction executeElasticIn(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_neg($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n}\nfunction executeElasticOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_sum($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), c), b);\n}\nfunction executeElasticInOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d / 2) === 2)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3 * 1.5);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    if (t < 1)\n        return $bm_sum($bm_mul(-0.5, $bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n    return $bm_sum($bm_sum($bm_mul($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), 0.5), c), b);\n}\nfunction executeElasticInProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : -Math.pow(2, 10 * Progress - 10) * Math.sin((Progress * 10 - 10.75) * (2 * Math.PI / 3));\n}\nfunction executeElasticOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Math.pow(2, -10 * Progress) * Math.sin((Progress * 10 - 0.75) * (2 * Math.PI / 3)) + 1;\n}\nfunction executeElasticInOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Progress < 0.5 ? -(Math.pow(2, 20 * Progress - 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5))) / 2 : Math.pow(2, -20 * Progress + 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5)) / 2 + 1;\n}\nfunction make_elastic_easing_in(curviosity) {\n    this.execute = executeElasticIn;\n    this.executeProgress = executeElasticInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_out(curviosity) {\n    this.execute = executeElasticOut;\n    this.executeProgress = executeElasticOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_in_out(curviosity) {\n    this.execute = executeElasticInOut;\n    this.executeProgress = executeElasticInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeBounceOut(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_mul($bm_mul(7.5625, t), t)), b);\n    } else if (t < 2 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 1.5 / 2.75), t), 0.75)), b);\n    } else if (t < 2.5 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.25 / 2.75), t), 0.9375)), b);\n    } else {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.625 / 2.75), t), 0.984375)), b);\n    }\n}\nfunction executeBounceOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2.75) {\n        return $bm_mul($bm_mul(7.5625, oldProgress), oldProgress);\n    } else if (oldProgress < 2 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 1.5 / 2.75), oldProgress), 0.75);\n    } else if (oldProgress < 2.5 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.25 / 2.75), oldProgress), 0.9375);\n    } else {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.625 / 2.75), oldProgress), 0.984375);\n    }\n}\nfunction executeBounceIn(t, b, c, d) {\n    return $bm_sum($bm_sub(c, executeBounceOut($bm_sub(d, t), 0, c, d)), b);\n}\nfunction executeBounceInOut(t, b, c, d) {\n    if (t < $bm_div(d, 2)) {\n        return $bm_sum($bm_mul(executeBounceIn($bm_mul(t, 2), 0, c, d), 0.5), b);\n    }\n    return $bm_sum($bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(t, 2), d), 0, c, d), 0.5), $bm_mul(c, 0.5)), b);\n}\nfunction executeBounceInProgress(oldProgress) {\n    return $bm_sub(1, executeBounceOut($bm_sub(1, oldProgress)));\n}\nfunction executeBounceInOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2) {\n        return $bm_mul(executeBounceIn($bm_mul(oldProgress, 2)), 0.5);\n    }\n    return $bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(oldProgress, 2), 1)), 0.5), 0.5);\n}\nfunction make_bounce_easing_in(curviosity) {\n    this.execute = executeBounceIn;\n    this.executeProgress = executeBounceInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_out(curviosity) {\n    this.execute = executeBounceOut;\n    this.executeProgress = executeBounceOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_in_out(curviosity) {\n    this.execute = executeBounceInOut;\n    this.executeProgress = executeBounceInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeOneSpring(t, b, e, d) {\n    var input = $bm_div(t, d);\n    var inter = $bm_sum($bm_neg($bm_mul(Math.pow(Math.E, $bm_neg($bm_mul(Math.sqrt(this.stiffness), input))), $bm_sum(1, $bm_mul(Math.sqrt(this.stiffness), input)))), 1);\n    return $bm_sum(b, $bm_mul(e, inter));\n}\nfunction make_one_spring_easing(stiffness) {\n    this.stiffness = stiffness;\n    this.execute = executeOneSpring;\n    return this;\n}\nfunction easingMaker() {\n    var t, d, newProgress, i;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var expression = null;\n    for (var i = 0; i < easingPreset.length; ++i) {\n        if (easingPreset[i][0] <= n && easingPreset[i][1] >= n + 1) {\n            expression = eval([easingPreset[i][2][0]][0]);\n            try {\n                expression = expression.apply({}, easingPreset[i][2][1].concat(easingPreset[i][2][3]));\n            } catch (e) {\n                expression = expression.apply({}, easingPreset[i][2][1]);\n            }\n            break;\n        }\n    }\n    if (!expression) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        do {\n            key(1)[dim];\n        } while (++dim);\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    if (expression.hasOwnProperty('curviosity') && expression.curviosity || thisProperty.value.constructor === Object) {\n        newProgress = expression.executeProgress($bm_div(t, d));\n        return thisProperty.valueAtTime($bm_sum(key1.time, $bm_mul(d, newProgress)));\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    }\n    var result = [];\n    for (i = 0; i < dim; ++i) {\n        result.push(expression.execute(t, key1[i], $bm_sub(key2[i], key1[i]), d));\n    }\n    if (result.length === 1) {\n        return result[0];\n    }\n    return result;\n}\n$bm_rt = easingMaker() || value;"},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","hd":false},{"ty":"tm","s":{"a":0,"k":14},"e":{"a":0,"k":36},"o":{"a":0,"k":0},"m":1,"nm":"Trim Paths 1","hd":false},{"ty":"st","c":{"a":0,"k":[0.211764708161,0.584313750267,0.866666674614,1]},"o":{"a":0,"k":100},"w":{"a":0,"k":7},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","hd":false}],"ip":0,"op":2000,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Shape Layer 10","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":48,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":54,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":72,"s":[100],"e":[0]},{"t":84}]},"r":{"a":0,"k":0},"p":{"a":0,"k":[59,74.5,0]},"a":{"a":0,"k":[0,0,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"t":48,"s":[30,30],"e":[66,66]},{"t":84}],"x":"var $bm_rt;\nvar easingPreset = [[\n            1,\n            2,\n            [\n                'make_bezier_easing',\n                [\n                    0.17,\n                    0.17,\n                    0.67,\n                    1\n                ],\n                'Sine.Out33',\n                true\n            ]\n        ]];\nfunction sampleCurveY(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ay, t), this.by), t), this.cy), t);\n}\nfunction sampleCurveX(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ax, t), this.bx), t), this.cx), t);\n}\nfunction sampleCurveDerivativeX(t) {\n    return $bm_sum($bm_mul($bm_sum($bm_mul($bm_mul(3, this.ax), t), $bm_mul(2, this.bx)), t), this.cx);\n}\nfunction solveCurveX(x, epsilon) {\n    var t2, i, x2, d2, t0, t1;\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = $bm_sub(sampleCurveX.call(this, t2), x);\n        if (Math.abs(x2) < epsilon) {\n            return t2;\n        }\n        d2 = sampleCurveDerivativeX.call(this, t2);\n        if (Math.abs(d2) < 0.000001) {\n            break;\n        }\n        t2 = $bm_sub(t2, $bm_div(x2, d2));\n    }\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0) {\n        return t0;\n    }\n    if (t2 > t1) {\n        return t1;\n    }\n    while (t0 < t1) {\n        x2 = sampleCurveX.call(this, t2);\n        if (Math.abs(x2 - x) < epsilon) {\n            return t2;\n        }\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = $bm_sum($bm_mul($bm_sub(t1, t0), 0.5), t0);\n    }\n    return t2;\n}\nfunction executeBezier(t, b, e, d) {\n    return $bm_sum(b, $bm_mul(e, sampleCurveY.call(this, solveCurveX.call(this, $bm_div(t, d), $bm_div(1, $bm_mul(200, d))))));\n}\nfunction executeBezierProgress(oldProgress) {\n    return sampleCurveY.call(this, solveCurveX.call(this, oldProgress, 1 / 200));\n}\nfunction make_bezier_easing(p1x, p1y, p2x, p2y, curviosity) {\n    this.cx = $bm_mul(3, p1x);\n    this.bx = $bm_sub($bm_mul(3, $bm_sub(p2x, p1x)), this.cx);\n    this.ax = $bm_sub($bm_sub(1, this.cx), this.bx);\n    this.cy = $bm_mul(3, p1y);\n    this.by = $bm_sub($bm_mul(3, $bm_sub(p2y, p1y)), this.cy);\n    this.ay = $bm_sub($bm_sub(1, this.cy), this.by);\n    this.curviosity = curviosity;\n    this.execute = executeBezier;\n    this.executeProgress = executeBezierProgress;\n    return this;\n}\nfunction executeElasticIn(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_neg($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n}\nfunction executeElasticOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_sum($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), c), b);\n}\nfunction executeElasticInOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d / 2) === 2)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3 * 1.5);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    if (t < 1)\n        return $bm_sum($bm_mul(-0.5, $bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n    return $bm_sum($bm_sum($bm_mul($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), 0.5), c), b);\n}\nfunction executeElasticInProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : -Math.pow(2, 10 * Progress - 10) * Math.sin((Progress * 10 - 10.75) * (2 * Math.PI / 3));\n}\nfunction executeElasticOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Math.pow(2, -10 * Progress) * Math.sin((Progress * 10 - 0.75) * (2 * Math.PI / 3)) + 1;\n}\nfunction executeElasticInOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Progress < 0.5 ? -(Math.pow(2, 20 * Progress - 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5))) / 2 : Math.pow(2, -20 * Progress + 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5)) / 2 + 1;\n}\nfunction make_elastic_easing_in(curviosity) {\n    this.execute = executeElasticIn;\n    this.executeProgress = executeElasticInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_out(curviosity) {\n    this.execute = executeElasticOut;\n    this.executeProgress = executeElasticOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_in_out(curviosity) {\n    this.execute = executeElasticInOut;\n    this.executeProgress = executeElasticInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeBounceOut(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_mul($bm_mul(7.5625, t), t)), b);\n    } else if (t < 2 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 1.5 / 2.75), t), 0.75)), b);\n    } else if (t < 2.5 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.25 / 2.75), t), 0.9375)), b);\n    } else {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.625 / 2.75), t), 0.984375)), b);\n    }\n}\nfunction executeBounceOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2.75) {\n        return $bm_mul($bm_mul(7.5625, oldProgress), oldProgress);\n    } else if (oldProgress < 2 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 1.5 / 2.75), oldProgress), 0.75);\n    } else if (oldProgress < 2.5 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.25 / 2.75), oldProgress), 0.9375);\n    } else {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.625 / 2.75), oldProgress), 0.984375);\n    }\n}\nfunction executeBounceIn(t, b, c, d) {\n    return $bm_sum($bm_sub(c, executeBounceOut($bm_sub(d, t), 0, c, d)), b);\n}\nfunction executeBounceInOut(t, b, c, d) {\n    if (t < $bm_div(d, 2)) {\n        return $bm_sum($bm_mul(executeBounceIn($bm_mul(t, 2), 0, c, d), 0.5), b);\n    }\n    return $bm_sum($bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(t, 2), d), 0, c, d), 0.5), $bm_mul(c, 0.5)), b);\n}\nfunction executeBounceInProgress(oldProgress) {\n    return $bm_sub(1, executeBounceOut($bm_sub(1, oldProgress)));\n}\nfunction executeBounceInOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2) {\n        return $bm_mul(executeBounceIn($bm_mul(oldProgress, 2)), 0.5);\n    }\n    return $bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(oldProgress, 2), 1)), 0.5), 0.5);\n}\nfunction make_bounce_easing_in(curviosity) {\n    this.execute = executeBounceIn;\n    this.executeProgress = executeBounceInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_out(curviosity) {\n    this.execute = executeBounceOut;\n    this.executeProgress = executeBounceOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_in_out(curviosity) {\n    this.execute = executeBounceInOut;\n    this.executeProgress = executeBounceInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeOneSpring(t, b, e, d) {\n    var input = $bm_div(t, d);\n    var inter = $bm_sum($bm_neg($bm_mul(Math.pow(Math.E, $bm_neg($bm_mul(Math.sqrt(this.stiffness), input))), $bm_sum(1, $bm_mul(Math.sqrt(this.stiffness), input)))), 1);\n    return $bm_sum(b, $bm_mul(e, inter));\n}\nfunction make_one_spring_easing(stiffness) {\n    this.stiffness = stiffness;\n    this.execute = executeOneSpring;\n    return this;\n}\nfunction easingMaker() {\n    var t, d, newProgress, i;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var expression = null;\n    for (var i = 0; i < easingPreset.length; ++i) {\n        if (easingPreset[i][0] <= n && easingPreset[i][1] >= n + 1) {\n            expression = eval([easingPreset[i][2][0]][0]);\n            try {\n                expression = expression.apply({}, easingPreset[i][2][1].concat(easingPreset[i][2][3]));\n            } catch (e) {\n                expression = expression.apply({}, easingPreset[i][2][1]);\n            }\n            break;\n        }\n    }\n    if (!expression) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        do {\n            key(1)[dim];\n        } while (++dim);\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    if (expression.hasOwnProperty('curviosity') && expression.curviosity || thisProperty.value.constructor === Object) {\n        newProgress = expression.executeProgress($bm_div(t, d));\n        return thisProperty.valueAtTime($bm_sum(key1.time, $bm_mul(d, newProgress)));\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    }\n    var result = [];\n    for (i = 0; i < dim; ++i) {\n        result.push(expression.execute(t, key1[i], $bm_sub(key2[i], key1[i]), d));\n    }\n    if (result.length === 1) {\n        return result[0];\n    }\n    return result;\n}\n$bm_rt = easingMaker() || value;"},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","hd":false},{"ty":"tm","s":{"a":0,"k":14},"e":{"a":0,"k":36},"o":{"a":0,"k":0},"m":1,"nm":"Trim Paths 1","hd":false},{"ty":"st","c":{"a":0,"k":[0.211764708161,0.584313750267,0.866666674614,1]},"o":{"a":0,"k":100},"w":{"a":0,"k":7},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","hd":false}],"ip":0,"op":2000,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Shape Layer 9","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":24,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":48,"s":[100],"e":[0]},{"t":60}]},"r":{"a":0,"k":0},"p":{"a":0,"k":[59,74.5,0]},"a":{"a":0,"k":[0,0,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"t":24,"s":[30,30],"e":[66,66]},{"t":60}],"x":"var $bm_rt;\nvar easingPreset = [[\n            1,\n            2,\n            [\n                'make_bezier_easing',\n                [\n                    0.17,\n                    0.17,\n                    0.67,\n                    1\n                ],\n                'Sine.Out33',\n                true\n            ]\n        ]];\nfunction sampleCurveY(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ay, t), this.by), t), this.cy), t);\n}\nfunction sampleCurveX(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ax, t), this.bx), t), this.cx), t);\n}\nfunction sampleCurveDerivativeX(t) {\n    return $bm_sum($bm_mul($bm_sum($bm_mul($bm_mul(3, this.ax), t), $bm_mul(2, this.bx)), t), this.cx);\n}\nfunction solveCurveX(x, epsilon) {\n    var t2, i, x2, d2, t0, t1;\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = $bm_sub(sampleCurveX.call(this, t2), x);\n        if (Math.abs(x2) < epsilon) {\n            return t2;\n        }\n        d2 = sampleCurveDerivativeX.call(this, t2);\n        if (Math.abs(d2) < 0.000001) {\n            break;\n        }\n        t2 = $bm_sub(t2, $bm_div(x2, d2));\n    }\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0) {\n        return t0;\n    }\n    if (t2 > t1) {\n        return t1;\n    }\n    while (t0 < t1) {\n        x2 = sampleCurveX.call(this, t2);\n        if (Math.abs(x2 - x) < epsilon) {\n            return t2;\n        }\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = $bm_sum($bm_mul($bm_sub(t1, t0), 0.5), t0);\n    }\n    return t2;\n}\nfunction executeBezier(t, b, e, d) {\n    return $bm_sum(b, $bm_mul(e, sampleCurveY.call(this, solveCurveX.call(this, $bm_div(t, d), $bm_div(1, $bm_mul(200, d))))));\n}\nfunction executeBezierProgress(oldProgress) {\n    return sampleCurveY.call(this, solveCurveX.call(this, oldProgress, 1 / 200));\n}\nfunction make_bezier_easing(p1x, p1y, p2x, p2y, curviosity) {\n    this.cx = $bm_mul(3, p1x);\n    this.bx = $bm_sub($bm_mul(3, $bm_sub(p2x, p1x)), this.cx);\n    this.ax = $bm_sub($bm_sub(1, this.cx), this.bx);\n    this.cy = $bm_mul(3, p1y);\n    this.by = $bm_sub($bm_mul(3, $bm_sub(p2y, p1y)), this.cy);\n    this.ay = $bm_sub($bm_sub(1, this.cy), this.by);\n    this.curviosity = curviosity;\n    this.execute = executeBezier;\n    this.executeProgress = executeBezierProgress;\n    return this;\n}\nfunction executeElasticIn(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_neg($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n}\nfunction executeElasticOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_sum($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), c), b);\n}\nfunction executeElasticInOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d / 2) === 2)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3 * 1.5);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    if (t < 1)\n        return $bm_sum($bm_mul(-0.5, $bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n    return $bm_sum($bm_sum($bm_mul($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), 0.5), c), b);\n}\nfunction executeElasticInProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : -Math.pow(2, 10 * Progress - 10) * Math.sin((Progress * 10 - 10.75) * (2 * Math.PI / 3));\n}\nfunction executeElasticOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Math.pow(2, -10 * Progress) * Math.sin((Progress * 10 - 0.75) * (2 * Math.PI / 3)) + 1;\n}\nfunction executeElasticInOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Progress < 0.5 ? -(Math.pow(2, 20 * Progress - 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5))) / 2 : Math.pow(2, -20 * Progress + 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5)) / 2 + 1;\n}\nfunction make_elastic_easing_in(curviosity) {\n    this.execute = executeElasticIn;\n    this.executeProgress = executeElasticInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_out(curviosity) {\n    this.execute = executeElasticOut;\n    this.executeProgress = executeElasticOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_in_out(curviosity) {\n    this.execute = executeElasticInOut;\n    this.executeProgress = executeElasticInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeBounceOut(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_mul($bm_mul(7.5625, t), t)), b);\n    } else if (t < 2 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 1.5 / 2.75), t), 0.75)), b);\n    } else if (t < 2.5 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.25 / 2.75), t), 0.9375)), b);\n    } else {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.625 / 2.75), t), 0.984375)), b);\n    }\n}\nfunction executeBounceOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2.75) {\n        return $bm_mul($bm_mul(7.5625, oldProgress), oldProgress);\n    } else if (oldProgress < 2 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 1.5 / 2.75), oldProgress), 0.75);\n    } else if (oldProgress < 2.5 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.25 / 2.75), oldProgress), 0.9375);\n    } else {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.625 / 2.75), oldProgress), 0.984375);\n    }\n}\nfunction executeBounceIn(t, b, c, d) {\n    return $bm_sum($bm_sub(c, executeBounceOut($bm_sub(d, t), 0, c, d)), b);\n}\nfunction executeBounceInOut(t, b, c, d) {\n    if (t < $bm_div(d, 2)) {\n        return $bm_sum($bm_mul(executeBounceIn($bm_mul(t, 2), 0, c, d), 0.5), b);\n    }\n    return $bm_sum($bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(t, 2), d), 0, c, d), 0.5), $bm_mul(c, 0.5)), b);\n}\nfunction executeBounceInProgress(oldProgress) {\n    return $bm_sub(1, executeBounceOut($bm_sub(1, oldProgress)));\n}\nfunction executeBounceInOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2) {\n        return $bm_mul(executeBounceIn($bm_mul(oldProgress, 2)), 0.5);\n    }\n    return $bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(oldProgress, 2), 1)), 0.5), 0.5);\n}\nfunction make_bounce_easing_in(curviosity) {\n    this.execute = executeBounceIn;\n    this.executeProgress = executeBounceInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_out(curviosity) {\n    this.execute = executeBounceOut;\n    this.executeProgress = executeBounceOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_in_out(curviosity) {\n    this.execute = executeBounceInOut;\n    this.executeProgress = executeBounceInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeOneSpring(t, b, e, d) {\n    var input = $bm_div(t, d);\n    var inter = $bm_sum($bm_neg($bm_mul(Math.pow(Math.E, $bm_neg($bm_mul(Math.sqrt(this.stiffness), input))), $bm_sum(1, $bm_mul(Math.sqrt(this.stiffness), input)))), 1);\n    return $bm_sum(b, $bm_mul(e, inter));\n}\nfunction make_one_spring_easing(stiffness) {\n    this.stiffness = stiffness;\n    this.execute = executeOneSpring;\n    return this;\n}\nfunction easingMaker() {\n    var t, d, newProgress, i;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var expression = null;\n    for (var i = 0; i < easingPreset.length; ++i) {\n        if (easingPreset[i][0] <= n && easingPreset[i][1] >= n + 1) {\n            expression = eval([easingPreset[i][2][0]][0]);\n            try {\n                expression = expression.apply({}, easingPreset[i][2][1].concat(easingPreset[i][2][3]));\n            } catch (e) {\n                expression = expression.apply({}, easingPreset[i][2][1]);\n            }\n            break;\n        }\n    }\n    if (!expression) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        do {\n            key(1)[dim];\n        } while (++dim);\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    if (expression.hasOwnProperty('curviosity') && expression.curviosity || thisProperty.value.constructor === Object) {\n        newProgress = expression.executeProgress($bm_div(t, d));\n        return thisProperty.valueAtTime($bm_sum(key1.time, $bm_mul(d, newProgress)));\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    }\n    var result = [];\n    for (i = 0; i < dim; ++i) {\n        result.push(expression.execute(t, key1[i], $bm_sub(key2[i], key1[i]), d));\n    }\n    if (result.length === 1) {\n        return result[0];\n    }\n    return result;\n}\n$bm_rt = easingMaker() || value;"},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","hd":false},{"ty":"tm","s":{"a":0,"k":14},"e":{"a":0,"k":36},"o":{"a":0,"k":0},"m":1,"nm":"Trim Paths 1","hd":false},{"ty":"st","c":{"a":0,"k":[0.211764708161,0.584313750267,0.866666674614,1]},"o":{"a":0,"k":100},"w":{"a":0,"k":7},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","hd":false}],"ip":0,"op":2000,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Shape Layer 8","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":6,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":24,"s":[100],"e":[0]},{"t":36}]},"r":{"a":0,"k":0},"p":{"a":0,"k":[59,74.5,0]},"a":{"a":0,"k":[0,0,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"t":0,"s":[30,30],"e":[66,66]},{"t":36}],"x":"var $bm_rt;\nvar easingPreset = [[\n            1,\n            2,\n            [\n                'make_bezier_easing',\n                [\n                    0.17,\n                    0.17,\n                    0.67,\n                    1\n                ],\n                'Sine.Out33',\n                true\n            ]\n        ]];\nfunction sampleCurveY(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ay, t), this.by), t), this.cy), t);\n}\nfunction sampleCurveX(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ax, t), this.bx), t), this.cx), t);\n}\nfunction sampleCurveDerivativeX(t) {\n    return $bm_sum($bm_mul($bm_sum($bm_mul($bm_mul(3, this.ax), t), $bm_mul(2, this.bx)), t), this.cx);\n}\nfunction solveCurveX(x, epsilon) {\n    var t2, i, x2, d2, t0, t1;\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = $bm_sub(sampleCurveX.call(this, t2), x);\n        if (Math.abs(x2) < epsilon) {\n            return t2;\n        }\n        d2 = sampleCurveDerivativeX.call(this, t2);\n        if (Math.abs(d2) < 0.000001) {\n            break;\n        }\n        t2 = $bm_sub(t2, $bm_div(x2, d2));\n    }\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0) {\n        return t0;\n    }\n    if (t2 > t1) {\n        return t1;\n    }\n    while (t0 < t1) {\n        x2 = sampleCurveX.call(this, t2);\n        if (Math.abs(x2 - x) < epsilon) {\n            return t2;\n        }\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = $bm_sum($bm_mul($bm_sub(t1, t0), 0.5), t0);\n    }\n    return t2;\n}\nfunction executeBezier(t, b, e, d) {\n    return $bm_sum(b, $bm_mul(e, sampleCurveY.call(this, solveCurveX.call(this, $bm_div(t, d), $bm_div(1, $bm_mul(200, d))))));\n}\nfunction executeBezierProgress(oldProgress) {\n    return sampleCurveY.call(this, solveCurveX.call(this, oldProgress, 1 / 200));\n}\nfunction make_bezier_easing(p1x, p1y, p2x, p2y, curviosity) {\n    this.cx = $bm_mul(3, p1x);\n    this.bx = $bm_sub($bm_mul(3, $bm_sub(p2x, p1x)), this.cx);\n    this.ax = $bm_sub($bm_sub(1, this.cx), this.bx);\n    this.cy = $bm_mul(3, p1y);\n    this.by = $bm_sub($bm_mul(3, $bm_sub(p2y, p1y)), this.cy);\n    this.ay = $bm_sub($bm_sub(1, this.cy), this.by);\n    this.curviosity = curviosity;\n    this.execute = executeBezier;\n    this.executeProgress = executeBezierProgress;\n    return this;\n}\nfunction executeElasticIn(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_neg($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n}\nfunction executeElasticOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_sum($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), c), b);\n}\nfunction executeElasticInOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d / 2) === 2)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3 * 1.5);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    if (t < 1)\n        return $bm_sum($bm_mul(-0.5, $bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n    return $bm_sum($bm_sum($bm_mul($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), 0.5), c), b);\n}\nfunction executeElasticInProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : -Math.pow(2, 10 * Progress - 10) * Math.sin((Progress * 10 - 10.75) * (2 * Math.PI / 3));\n}\nfunction executeElasticOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Math.pow(2, -10 * Progress) * Math.sin((Progress * 10 - 0.75) * (2 * Math.PI / 3)) + 1;\n}\nfunction executeElasticInOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Progress < 0.5 ? -(Math.pow(2, 20 * Progress - 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5))) / 2 : Math.pow(2, -20 * Progress + 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5)) / 2 + 1;\n}\nfunction make_elastic_easing_in(curviosity) {\n    this.execute = executeElasticIn;\n    this.executeProgress = executeElasticInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_out(curviosity) {\n    this.execute = executeElasticOut;\n    this.executeProgress = executeElasticOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_in_out(curviosity) {\n    this.execute = executeElasticInOut;\n    this.executeProgress = executeElasticInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeBounceOut(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_mul($bm_mul(7.5625, t), t)), b);\n    } else if (t < 2 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 1.5 / 2.75), t), 0.75)), b);\n    } else if (t < 2.5 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.25 / 2.75), t), 0.9375)), b);\n    } else {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.625 / 2.75), t), 0.984375)), b);\n    }\n}\nfunction executeBounceOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2.75) {\n        return $bm_mul($bm_mul(7.5625, oldProgress), oldProgress);\n    } else if (oldProgress < 2 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 1.5 / 2.75), oldProgress), 0.75);\n    } else if (oldProgress < 2.5 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.25 / 2.75), oldProgress), 0.9375);\n    } else {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.625 / 2.75), oldProgress), 0.984375);\n    }\n}\nfunction executeBounceIn(t, b, c, d) {\n    return $bm_sum($bm_sub(c, executeBounceOut($bm_sub(d, t), 0, c, d)), b);\n}\nfunction executeBounceInOut(t, b, c, d) {\n    if (t < $bm_div(d, 2)) {\n        return $bm_sum($bm_mul(executeBounceIn($bm_mul(t, 2), 0, c, d), 0.5), b);\n    }\n    return $bm_sum($bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(t, 2), d), 0, c, d), 0.5), $bm_mul(c, 0.5)), b);\n}\nfunction executeBounceInProgress(oldProgress) {\n    return $bm_sub(1, executeBounceOut($bm_sub(1, oldProgress)));\n}\nfunction executeBounceInOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2) {\n        return $bm_mul(executeBounceIn($bm_mul(oldProgress, 2)), 0.5);\n    }\n    return $bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(oldProgress, 2), 1)), 0.5), 0.5);\n}\nfunction make_bounce_easing_in(curviosity) {\n    this.execute = executeBounceIn;\n    this.executeProgress = executeBounceInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_out(curviosity) {\n    this.execute = executeBounceOut;\n    this.executeProgress = executeBounceOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_in_out(curviosity) {\n    this.execute = executeBounceInOut;\n    this.executeProgress = executeBounceInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeOneSpring(t, b, e, d) {\n    var input = $bm_div(t, d);\n    var inter = $bm_sum($bm_neg($bm_mul(Math.pow(Math.E, $bm_neg($bm_mul(Math.sqrt(this.stiffness), input))), $bm_sum(1, $bm_mul(Math.sqrt(this.stiffness), input)))), 1);\n    return $bm_sum(b, $bm_mul(e, inter));\n}\nfunction make_one_spring_easing(stiffness) {\n    this.stiffness = stiffness;\n    this.execute = executeOneSpring;\n    return this;\n}\nfunction easingMaker() {\n    var t, d, newProgress, i;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var expression = null;\n    for (var i = 0; i < easingPreset.length; ++i) {\n        if (easingPreset[i][0] <= n && easingPreset[i][1] >= n + 1) {\n            expression = eval([easingPreset[i][2][0]][0]);\n            try {\n                expression = expression.apply({}, easingPreset[i][2][1].concat(easingPreset[i][2][3]));\n            } catch (e) {\n                expression = expression.apply({}, easingPreset[i][2][1]);\n            }\n            break;\n        }\n    }\n    if (!expression) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        do {\n            key(1)[dim];\n        } while (++dim);\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    if (expression.hasOwnProperty('curviosity') && expression.curviosity || thisProperty.value.constructor === Object) {\n        newProgress = expression.executeProgress($bm_div(t, d));\n        return thisProperty.valueAtTime($bm_sum(key1.time, $bm_mul(d, newProgress)));\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    }\n    var result = [];\n    for (i = 0; i < dim; ++i) {\n        result.push(expression.execute(t, key1[i], $bm_sub(key2[i], key1[i]), d));\n    }\n    if (result.length === 1) {\n        return result[0];\n    }\n    return result;\n}\n$bm_rt = easingMaker() || value;"},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","hd":false},{"ty":"tm","s":{"a":0,"k":14},"e":{"a":0,"k":36},"o":{"a":0,"k":0},"m":1,"nm":"Trim Paths 1","hd":false},{"ty":"st","c":{"a":0,"k":[0.211764708161,0.584313750267,0.866666674614,1]},"o":{"a":0,"k":100},"w":{"a":0,"k":7},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","hd":false}],"ip":0,"op":2000,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Shape Layer 12","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":-24,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":-18,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[100],"e":[0]},{"t":12}]},"r":{"a":0,"k":0},"p":{"a":0,"k":[59,74.5,0]},"a":{"a":0,"k":[0,0,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"t":-24,"s":[30,30],"e":[66,66]},{"t":12}],"x":"var $bm_rt;\nvar easingPreset = [[\n            1,\n            2,\n            [\n                'make_bezier_easing',\n                [\n                    0.17,\n                    0.17,\n                    0.67,\n                    1\n                ],\n                'Sine.Out33',\n                true\n            ]\n        ]];\nfunction sampleCurveY(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ay, t), this.by), t), this.cy), t);\n}\nfunction sampleCurveX(t) {\n    return $bm_mul($bm_sum($bm_mul($bm_sum($bm_mul(this.ax, t), this.bx), t), this.cx), t);\n}\nfunction sampleCurveDerivativeX(t) {\n    return $bm_sum($bm_mul($bm_sum($bm_mul($bm_mul(3, this.ax), t), $bm_mul(2, this.bx)), t), this.cx);\n}\nfunction solveCurveX(x, epsilon) {\n    var t2, i, x2, d2, t0, t1;\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = $bm_sub(sampleCurveX.call(this, t2), x);\n        if (Math.abs(x2) < epsilon) {\n            return t2;\n        }\n        d2 = sampleCurveDerivativeX.call(this, t2);\n        if (Math.abs(d2) < 0.000001) {\n            break;\n        }\n        t2 = $bm_sub(t2, $bm_div(x2, d2));\n    }\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0) {\n        return t0;\n    }\n    if (t2 > t1) {\n        return t1;\n    }\n    while (t0 < t1) {\n        x2 = sampleCurveX.call(this, t2);\n        if (Math.abs(x2 - x) < epsilon) {\n            return t2;\n        }\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = $bm_sum($bm_mul($bm_sub(t1, t0), 0.5), t0);\n    }\n    return t2;\n}\nfunction executeBezier(t, b, e, d) {\n    return $bm_sum(b, $bm_mul(e, sampleCurveY.call(this, solveCurveX.call(this, $bm_div(t, d), $bm_div(1, $bm_mul(200, d))))));\n}\nfunction executeBezierProgress(oldProgress) {\n    return sampleCurveY.call(this, solveCurveX.call(this, oldProgress, 1 / 200));\n}\nfunction make_bezier_easing(p1x, p1y, p2x, p2y, curviosity) {\n    this.cx = $bm_mul(3, p1x);\n    this.bx = $bm_sub($bm_mul(3, $bm_sub(p2x, p1x)), this.cx);\n    this.ax = $bm_sub($bm_sub(1, this.cx), this.bx);\n    this.cy = $bm_mul(3, p1y);\n    this.by = $bm_sub($bm_mul(3, $bm_sub(p2y, p1y)), this.cy);\n    this.ay = $bm_sub($bm_sub(1, this.cy), this.by);\n    this.curviosity = curviosity;\n    this.execute = executeBezier;\n    this.executeProgress = executeBezierProgress;\n    return this;\n}\nfunction executeElasticIn(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_neg($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n}\nfunction executeElasticOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d) === 1)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    return $bm_sum($bm_sum($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), c), b);\n}\nfunction executeElasticInOut(t, b, c, d) {\n    var s = 1.70158;\n    var p = 0;\n    var a = c;\n    if (t === 0)\n        return b;\n    if ((t /= d / 2) === 2)\n        return $bm_sum(b, c);\n    if (!p)\n        p = $bm_mul(d, 0.3 * 1.5);\n    if (a < Math.abs(c)) {\n        a = c;\n        s = $bm_div(p, 4);\n    } else {\n        s = $bm_mul($bm_div(p, $bm_mul(2, Math.PI)), Math.asin(1));\n    }\n    if (t < 1)\n        return $bm_sum($bm_mul(-0.5, $bm_mul($bm_mul(a, Math.pow(2, $bm_mul(10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p)))), b);\n    return $bm_sum($bm_sum($bm_mul($bm_mul($bm_mul(a, Math.pow(2, $bm_mul(-10, t -= 1))), Math.sin($bm_div($bm_mul($bm_sub($bm_mul(t, d), s), $bm_mul(2, Math.PI)), p))), 0.5), c), b);\n}\nfunction executeElasticInProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : -Math.pow(2, 10 * Progress - 10) * Math.sin((Progress * 10 - 10.75) * (2 * Math.PI / 3));\n}\nfunction executeElasticOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Math.pow(2, -10 * Progress) * Math.sin((Progress * 10 - 0.75) * (2 * Math.PI / 3)) + 1;\n}\nfunction executeElasticInOutProgress(Progress) {\n    return Progress === 0 ? 0 : Progress === 1 ? 1 : Progress < 0.5 ? -(Math.pow(2, 20 * Progress - 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5))) / 2 : Math.pow(2, -20 * Progress + 10) * Math.sin((20 * Progress - 11.125) * (2 * Math.PI / 4.5)) / 2 + 1;\n}\nfunction make_elastic_easing_in(curviosity) {\n    this.execute = executeElasticIn;\n    this.executeProgress = executeElasticInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_out(curviosity) {\n    this.execute = executeElasticOut;\n    this.executeProgress = executeElasticOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_elastic_easing_in_out(curviosity) {\n    this.execute = executeElasticInOut;\n    this.executeProgress = executeElasticInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeBounceOut(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_mul($bm_mul(7.5625, t), t)), b);\n    } else if (t < 2 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 1.5 / 2.75), t), 0.75)), b);\n    } else if (t < 2.5 / 2.75) {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.25 / 2.75), t), 0.9375)), b);\n    } else {\n        return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(7.5625, t -= 2.625 / 2.75), t), 0.984375)), b);\n    }\n}\nfunction executeBounceOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2.75) {\n        return $bm_mul($bm_mul(7.5625, oldProgress), oldProgress);\n    } else if (oldProgress < 2 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 1.5 / 2.75), oldProgress), 0.75);\n    } else if (oldProgress < 2.5 / 2.75) {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.25 / 2.75), oldProgress), 0.9375);\n    } else {\n        return $bm_sum($bm_mul($bm_mul(7.5625, oldProgress -= 2.625 / 2.75), oldProgress), 0.984375);\n    }\n}\nfunction executeBounceIn(t, b, c, d) {\n    return $bm_sum($bm_sub(c, executeBounceOut($bm_sub(d, t), 0, c, d)), b);\n}\nfunction executeBounceInOut(t, b, c, d) {\n    if (t < $bm_div(d, 2)) {\n        return $bm_sum($bm_mul(executeBounceIn($bm_mul(t, 2), 0, c, d), 0.5), b);\n    }\n    return $bm_sum($bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(t, 2), d), 0, c, d), 0.5), $bm_mul(c, 0.5)), b);\n}\nfunction executeBounceInProgress(oldProgress) {\n    return $bm_sub(1, executeBounceOut($bm_sub(1, oldProgress)));\n}\nfunction executeBounceInOutProgress(oldProgress) {\n    if (oldProgress < 1 / 2) {\n        return $bm_mul(executeBounceIn($bm_mul(oldProgress, 2)), 0.5);\n    }\n    return $bm_sum($bm_mul(executeBounceOut($bm_sub($bm_mul(oldProgress, 2), 1)), 0.5), 0.5);\n}\nfunction make_bounce_easing_in(curviosity) {\n    this.execute = executeBounceIn;\n    this.executeProgress = executeBounceInProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_out(curviosity) {\n    this.execute = executeBounceOut;\n    this.executeProgress = executeBounceOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction make_bounce_easing_in_out(curviosity) {\n    this.execute = executeBounceInOut;\n    this.executeProgress = executeBounceInOutProgress;\n    this.curviosity = curviosity;\n    return this;\n}\nfunction executeOneSpring(t, b, e, d) {\n    var input = $bm_div(t, d);\n    var inter = $bm_sum($bm_neg($bm_mul(Math.pow(Math.E, $bm_neg($bm_mul(Math.sqrt(this.stiffness), input))), $bm_sum(1, $bm_mul(Math.sqrt(this.stiffness), input)))), 1);\n    return $bm_sum(b, $bm_mul(e, inter));\n}\nfunction make_one_spring_easing(stiffness) {\n    this.stiffness = stiffness;\n    this.execute = executeOneSpring;\n    return this;\n}\nfunction easingMaker() {\n    var t, d, newProgress, i;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var expression = null;\n    for (var i = 0; i < easingPreset.length; ++i) {\n        if (easingPreset[i][0] <= n && easingPreset[i][1] >= n + 1) {\n            expression = eval([easingPreset[i][2][0]][0]);\n            try {\n                expression = expression.apply({}, easingPreset[i][2][1].concat(easingPreset[i][2][3]));\n            } catch (e) {\n                expression = expression.apply({}, easingPreset[i][2][1]);\n            }\n            break;\n        }\n    }\n    if (!expression) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        do {\n            key(1)[dim];\n        } while (++dim);\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    if (expression.hasOwnProperty('curviosity') && expression.curviosity || thisProperty.value.constructor === Object) {\n        newProgress = expression.executeProgress($bm_div(t, d));\n        return thisProperty.valueAtTime($bm_sum(key1.time, $bm_mul(d, newProgress)));\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    }\n    var result = [];\n    for (i = 0; i < dim; ++i) {\n        result.push(expression.execute(t, key1[i], $bm_sub(key2[i], key1[i]), d));\n    }\n    if (result.length === 1) {\n        return result[0];\n    }\n    return result;\n}\n$bm_rt = easingMaker() || value;"},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","hd":false},{"ty":"tm","s":{"a":0,"k":14},"e":{"a":0,"k":36},"o":{"a":0,"k":0},"m":1,"nm":"Trim Paths 1","hd":false},{"ty":"st","c":{"a":0,"k":[0.211764708161,0.584313750267,0.866666674614,1]},"o":{"a":0,"k":100},"w":{"a":0,"k":7},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","hd":false}],"ip":-24,"op":1976,"st":-24,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Fill 8 Outlines","sr":1,"ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":0},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":6,"s":[57.278,93.649,0],"e":[57.278,83.649,0],"to":[0,-1.667,0],"ti":[0,1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":18,"s":[57.278,83.649,0],"e":[57.278,83.649,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":24,"s":[57.278,83.649,0],"e":[57.278,93.649,0],"to":[0,1.667,0],"ti":[0,-1.667,0]},{"t":30}]},"a":{"a":0,"k":[7.259,17.883,0]},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[300,300,100],"e":[300,270,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":6,"s":[300,270,100],"e":[300,330,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":12,"s":[300,330,100],"e":[300,300,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":18,"s":[300,300,100],"e":[300,300,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":24,"s":[300,300,100],"e":[300,300,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":30,"s":[300,300,100],"e":[300,270,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":36,"s":[300,270,100],"e":[300,300,100]},{"t":42}]}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ks":{"a":0,"k":{"i":[[-0.813,-1],[0,0],[2.622,0],[0,0],[0,0],[0.748,0],[0,-2.368],[-2.367,0],[-0.123,2.258],[0.002,0.018],[0,0],[0,0]],"o":[[0,0],[-1.223,-1.408],[0,0],[0,0],[-0.612,-0.336],[-2.367,0],[0,2.368],[2.289,0],[0.014,-0.012],[0,0],[0,0],[2.009,0]],"v":[[5.668,-4.896],[7.259,-6.487],[1.527,-8.942],[-0.91,-8.942],[-0.91,0.894],[-2.973,0.366],[-7.26,4.653],[-2.973,8.941],[1.303,4.89],[1.322,4.847],[1.322,-6.709],[1.527,-6.709]],"c":true}},"nm":"Path 1","hd":false},{"ty":"fl","c":{"a":0,"k":[0.211764708161,0.584313750267,0.866666674614,1]},"o":{"a":0,"k":100},"r":1,"bm":0,"nm":"Fill 1","hd":false},{"ty":"tr","p":{"a":0,"k":[7.259,8.941]},"a":{"a":0,"k":[0,0]},"s":{"a":0,"k":[100,100]},"r":{"a":0,"k":0},"o":{"a":0,"k":100},"sk":{"a":0,"k":0},"sa":{"a":0,"k":0},"nm":"Transform"}],"nm":"Group 1","bm":0,"hd":false}],"ip":0,"op":1000,"st":0,"bm":0}],"markers":[]}